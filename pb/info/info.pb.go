// Code generated by protoc-gen-go. DO NOT EDIT.
// source: info/info.proto

/*
Package info is a generated protocol buffer package.

It is generated from these files:
	info/info.proto

It has these top-level messages:
	Chunk
	File
*/
package info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Chunk struct {
	UUID     string   `protobuf:"bytes,1,opt,name=UUID" json:"UUID,omitempty"`
	Size     int64    `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Used     int64    `protobuf:"varint,3,opt,name=used" json:"used,omitempty"`
	Replicas []string `protobuf:"bytes,4,rep,name=replicas" json:"replicas,omitempty"`
	FileUUID string   `protobuf:"bytes,5,opt,name=FileUUID" json:"FileUUID,omitempty"`
}

func (m *Chunk) Reset()                    { *m = Chunk{} }
func (m *Chunk) String() string            { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()               {}
func (*Chunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Chunk) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Chunk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Chunk) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *Chunk) GetReplicas() []string {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *Chunk) GetFileUUID() string {
	if m != nil {
		return m.FileUUID
	}
	return ""
}

type File struct {
	UUID       string   `protobuf:"bytes,1,opt,name=UUID" json:"UUID,omitempty"`
	FileName   string   `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	Size       int64    `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	ReplicaNum int32    `protobuf:"varint,4,opt,name=replica_num,json=replicaNum" json:"replica_num,omitempty"`
	CreatedAt  int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt  int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Chunks     []*Chunk `protobuf:"bytes,7,rep,name=chunks" json:"chunks,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *File) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *File) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetReplicaNum() int32 {
	if m != nil {
		return m.ReplicaNum
	}
	return 0
}

func (m *File) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *File) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *File) GetChunks() []*Chunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func init() {
	proto.RegisterType((*Chunk)(nil), "info.Chunk")
	proto.RegisterType((*File)(nil), "info.File")
}

func init() { proto.RegisterFile("info/info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x18, 0xc4, 0xa9, 0x49, 0xeb, 0xe6, 0xeb, 0x41, 0xc8, 0x29, 0x28, 0x62, 0x58, 0x2f, 0x39, 0xad,
	0xa0, 0x4f, 0xb0, 0x28, 0x82, 0x97, 0x3d, 0x04, 0xf6, 0x5c, 0x62, 0x9b, 0xc5, 0x60, 0xff, 0xd1,
	0x26, 0x17, 0x7d, 0x48, 0x5f, 0x49, 0xbe, 0x34, 0x16, 0x0f, 0x7b, 0x09, 0x33, 0xbf, 0x81, 0x7c,
	0xc3, 0xc0, 0x95, 0xeb, 0x4f, 0xc3, 0x03, 0x3e, 0xbb, 0x71, 0x1a, 0xfc, 0xc0, 0x29, 0xea, 0xed,
	0x37, 0xe4, 0xcf, 0x1f, 0xa1, 0xff, 0xe4, 0x1c, 0xe8, 0xf1, 0xf8, 0xf6, 0x22, 0x32, 0x99, 0x29,
	0xa6, 0xa3, 0x46, 0x36, 0xbb, 0x2f, 0x2b, 0x2e, 0x64, 0xa6, 0x88, 0x8e, 0x1a, 0x59, 0x98, 0x6d,
	0x23, 0xc8, 0xc2, 0x50, 0xf3, 0x6b, 0xd8, 0x4c, 0x76, 0x6c, 0x5d, 0x6d, 0x66, 0x41, 0x25, 0x51,
	0x4c, 0xaf, 0x1e, 0xb3, 0x57, 0xd7, 0xda, 0xf8, 0x77, 0x1e, 0xff, 0x5e, 0xfd, 0xf6, 0x27, 0x03,
	0x8a, 0xe6, 0xec, 0xf1, 0x1b, 0x60, 0x27, 0xd7, 0xda, 0xaa, 0x37, 0xdd, 0xd2, 0x80, 0xe9, 0x0d,
	0x82, 0x83, 0xe9, 0xec, 0xda, 0x8c, 0xfc, 0x6b, 0x76, 0x07, 0x65, 0xba, 0x5a, 0xf5, 0xa1, 0x13,
	0x54, 0x66, 0x2a, 0xd7, 0x90, 0xd0, 0x21, 0x74, 0xfc, 0x16, 0xa0, 0x9e, 0xac, 0xf1, 0xb6, 0xa9,
	0x8c, 0x8f, 0x65, 0x88, 0x66, 0x89, 0xec, 0x3d, 0xc6, 0x61, 0x6c, 0xfe, 0xe2, 0x62, 0x89, 0x13,
	0xd9, 0x7b, 0x7e, 0x0f, 0x45, 0x8d, 0x4b, 0xcd, 0xe2, 0x52, 0x12, 0x55, 0x3e, 0x96, 0xbb, 0x38,
	0x66, 0x5c, 0x4f, 0xa7, 0xe8, 0xbd, 0x88, 0xdb, 0x3e, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0xa6, 0x86, 0xca, 0x6e, 0x01, 0x00, 0x00,
}
