// Code generated by protoc-gen-go. DO NOT EDIT.
// source: info/info.proto

package info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Chunk struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Used                 int64    `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Replicas             []string `protobuf:"bytes,4,rep,name=replicas,proto3" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_33aec9028a581dea, []int{0}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Chunk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Chunk) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *Chunk) GetReplicas() []string {
	if m != nil {
		return m.Replicas
	}
	return nil
}

type File struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ReplicaNum           int32    `protobuf:"varint,4,opt,name=replica_num,json=replicaNum,proto3" json:"replica_num,omitempty"`
	CreatedAt            int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Chunks               []*Chunk `protobuf:"bytes,7,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_33aec9028a581dea, []int{1}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *File) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetReplicaNum() int32 {
	if m != nil {
		return m.ReplicaNum
	}
	return 0
}

func (m *File) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *File) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *File) GetChunks() []*Chunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func init() {
	proto.RegisterType((*Chunk)(nil), "info.Chunk")
	proto.RegisterType((*File)(nil), "info.File")
}

func init() { proto.RegisterFile("info/info.proto", fileDescriptor_info_33aec9028a581dea) }

var fileDescriptor_info_33aec9028a581dea = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xbd, 0x4a, 0x04, 0x31,
	0x14, 0x85, 0x89, 0xc9, 0x8c, 0x9b, 0x3b, 0x85, 0x90, 0x2a, 0x28, 0x62, 0x58, 0x9b, 0x54, 0x2b,
	0xe8, 0x13, 0x2c, 0x8a, 0x60, 0xb3, 0x45, 0x60, 0xeb, 0x21, 0xce, 0x64, 0x31, 0x38, 0x7f, 0xcc,
	0x24, 0x8d, 0x2f, 0xe9, 0x2b, 0xc9, 0xcd, 0xc4, 0xc5, 0xc2, 0x26, 0x9c, 0x7c, 0x87, 0xe4, 0xc0,
	0x07, 0x57, 0x7e, 0x38, 0x8d, 0x0f, 0x78, 0xec, 0xa6, 0x79, 0x0c, 0xa3, 0x60, 0x98, 0xb7, 0x35,
	0x14, 0xcf, 0x1f, 0x71, 0xf8, 0x14, 0x02, 0xd8, 0xf1, 0xf8, 0xf6, 0x22, 0x89, 0x22, 0x9a, 0x9b,
	0x94, 0x91, 0x2d, 0xfe, 0xcb, 0xc9, 0x0b, 0x45, 0x34, 0x35, 0x29, 0x23, 0x8b, 0x8b, 0x6b, 0x25,
	0x5d, 0x19, 0x66, 0x71, 0x0d, 0x9b, 0xd9, 0x4d, 0x9d, 0x6f, 0xec, 0x22, 0x99, 0xa2, 0x9a, 0x9b,
	0xf3, 0x7d, 0xfb, 0x4d, 0x80, 0xbd, 0xfa, 0xce, 0xfd, 0x3b, 0x70, 0x03, 0xfc, 0xe4, 0x3b, 0x57,
	0x0f, 0xb6, 0x5f, 0x57, 0xb8, 0xd9, 0x20, 0x38, 0xd8, 0xde, 0x9d, 0xd7, 0xe9, 0x9f, 0xf5, 0x3b,
	0xa8, 0xf2, 0xcf, 0xf5, 0x10, 0x7b, 0xc9, 0x14, 0xd1, 0x85, 0x81, 0x8c, 0x0e, 0xb1, 0x17, 0xb7,
	0x00, 0xcd, 0xec, 0x6c, 0x70, 0x6d, 0x6d, 0x83, 0x2c, 0xd2, 0x53, 0x9e, 0xc9, 0x3e, 0x60, 0x1d,
	0xa7, 0xf6, 0xb7, 0x2e, 0xd7, 0x3a, 0x93, 0x7d, 0x10, 0xf7, 0x50, 0x36, 0x68, 0x63, 0x91, 0x97,
	0x8a, 0xea, 0xea, 0xb1, 0xda, 0x25, 0x61, 0xc9, 0x90, 0xc9, 0xd5, 0x7b, 0x99, 0xfc, 0x3d, 0xfd,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xca, 0xec, 0xac, 0xf7, 0x52, 0x01, 0x00, 0x00,
}
